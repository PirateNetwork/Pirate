# we are using separate workflow because CI producing test binaries with CPPFLAGS=-DTESTMODE

name: Pirate CD test releases


on:
  push:
    branches:
    - master


jobs:

  linux-build:
    name: Linux Build
    # using there as old release as possible with GHA worker to provide better compatibility
    runs-on: ubuntu-18.04
    steps:

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Shortify commit sha
        shell: bash
        run: echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
        id: shortify_commit

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install deps (Linux)
        run: |
          sudo apt-get update  # prevents repo404 errors on apt-remove below
          sudo apt-get remove php5.6-fpm php7.0-fpm php7.1-fpm php7.2-fpm php7.3-fpm php7.3-common php7.4-fpm
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install mingw-w64 build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool libncurses-dev unzip git python zlib1g-dev wget bsdmainutils automake libboost-all-dev libssl-dev libprotobuf-dev protobuf-compiler libqrencode-dev libdb++-dev ntp ntpdate nano software-properties-common curl libevent-dev libcurl4-gnutls-dev cmake clang libsodium-dev -y
      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: |
          ./zcutil/build.sh -j$(nproc)
          zip --junk-paths pirate-linux src/pirated src/pirate-cli
      - name: Upload pirate-linux.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: pirate-linux
          path: ./pirate-linux.zip

  osx-build:
    name: OSX Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install deps (macOS)
        run: |
          brew update
          brew upgrade
          brew tap discoteq/discoteq; brew install flock
          brew install autoconf autogen automake
          brew install gcc@8
          brew install binutils
          brew install protobuf
          brew install coreutils
          brew install wget
          brew install python3
      - name: Build (macOS)
        run: |
          ./zcutil/build-mac.sh -j4
          zip --junk-paths pirate-osx src/pirated src/pirate-cli
      - name: Upload pirate-osx.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: pirate-osx
          path: ./pirate-osx.zip

  windows-build:
    name: Windows Build (mingw)
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Install deps (Windows)
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update  # prevents repo404 errors on apt-remove below
          sudo apt-get remove php5.6-fpm php7.0-fpm php7.1-fpm php7.2-fpm php7.3-fpm php7.3-common php7.4-fpm
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install mingw-w64 build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool libncurses-dev unzip git python zlib1g-dev wget bsdmainutils automake libboost-all-dev libssl-dev libprotobuf-dev protobuf-compiler libqrencode-dev libdb++-dev ntp ntpdate nano software-properties-common curl libevent-dev libcurl4-gnutls-dev cmake clang libsodium-dev -y
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
      - name: Build (Windows)
        run: |
          ./zcutil/build-win.sh -j$(nproc)
          zip --junk-paths pirate-win src/pirated.exe src/pirate-cli.exe
      - name: Upload pirate-win.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: pirate-win
          path: ./pirate-win.zip
